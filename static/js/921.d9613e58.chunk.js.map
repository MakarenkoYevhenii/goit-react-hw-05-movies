{"version":3,"file":"static/js/921.d9613e58.chunk.js","mappings":"qQACA,EAA6B,+BAA7B,EAAuE,6BAAvE,EAA+G,6B,SCiE/G,EA5DmB,WACf,OAAiBA,EAAAA,EAAAA,UAAS,KAAnBC,GAAP,eACA,GAAyBD,EAAAA,EAAAA,UAAS,IAAlC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAuBC,EAAAA,EAAAA,MAEjBC,GAFN,eAEiCC,IAAI,QAC/BC,GAAUC,EAAAA,EAAAA,MAChBC,QAAQC,IAAIL,IAIZM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAC,8GAEkBC,EAAAA,EAAAA,IAAcR,GAFhC,OAERS,EAFQ,OAGhBX,EAAUW,EAAmBC,SAHb,uGAAD,qDASnB,GAAGC,QAAQX,GACT,OAAOO,MAEP,CAACP,IAGH,IAAMY,EAAWf,EAAOgB,KAAI,SAAAC,GACxB,OACI,eAAkBC,UAAWC,EAA7B,UACG,UAAC,KAAD,CAAMC,GAAE,UAAKH,EAAKI,IAAMH,UAAWC,EAAgBG,MAAO,CAACC,KAAMlB,GAAjE,WAEE,gBAAKmB,IAAG,8CAAyCP,EAAKQ,aAAcC,MAAM,QAAQC,IAAKV,EAAKW,YAC5F,uBAAIX,EAAKY,qBAJLZ,EAAKI,OAWxB,OAEI,iCACA,oBAEF,6BACE,4BACC,kBAAOS,KAAK,OAAOC,KAAK,OAAOC,SAvCf,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACjBlC,EAASkC,EAAOC,aAwClB,mBAAQhB,UAAWC,EAAnB,wBAEF,0BACA,eAAID,UAAWC,EAAf,SACKJ,UChDT,EARqB,WACjB,OACI,+BACA,SAAC,EAAD,Q,iMCJFoB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAQ,sCAIL,SAAeC,IAAtB,+B,aAAO,O,oBAAA,sGACkBL,EAAS/B,IAAI,wBAD/B,uBACGqC,EADH,EACGA,KADH,kBAGEA,GAHF,kEAOA,IAAOC,EAAQ,mCAAC,WAAMrB,GAAN,yFACEc,EAAS/B,IAAT,iBAAuBiB,IADzB,uBACboB,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAD,sDAIRE,EAAQ,mCAAC,WAAOtB,GAAP,yFACEc,EAAS/B,IAAT,iBAAuBiB,EAAvB,aADF,uBACboB,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAD,sDAIRG,EAAS,mCAAC,WAAOvB,GAAP,yFACCc,EAAS/B,IAAT,iBAAuBiB,EAAvB,aADD,uBACdoB,EADc,EACdA,KADc,kBAGfA,GAHe,2CAAD,sDAIT9B,EAAa,mCAAC,WAAOkC,GAAP,yFACHV,EAAS/B,IAAT,8CAAoDyC,EAApD,gCADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAD","sources":["webpack://react-homework-template/./src/components/FilmSeach/filmSearch.module.css?4363","components/FilmSeach/FilmSearchPages.jsx","pages/moviesSearch/MoviesSearchPage.jsx","shared/services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonlink\":\"filmSearch_buttonlink__6UeKF\",\"filmList\":\"filmSearch_filmList__3qrb3\",\"link_bam\":\"filmSearch_link_bam__Zh1Iw\"};","import {  useState,useEffect } from \"react\";\r\nimport { getFilmSearch } from \"shared/services/getMovies\";\r\nimport { Link, useLocation,useSearchParams} from 'react-router-dom';\r\n    import style from '../../components/FilmSeach/filmSearch.module.css'\r\n\r\n\r\nconst FilmSearch = () => {\r\n    const [setValue]=useState(\" \")\r\n    const [movies,setMovies]=useState([])\r\n    const [searchParams] = useSearchParams();\r\n\r\n    const searchQuery = searchParams.get('name');\r\n    const location =useLocation()\r\n    console.log(searchQuery);\r\n    const handleChange=({target})=>{\r\n        setValue(target.value)\r\n    }\r\n    useEffect(()=>{\r\n      const fetchMovies=async()=>{\r\n        try {\r\n          const moviesSearchResult= await getFilmSearch(searchQuery)\r\n        setMovies(moviesSearchResult.results)\r\n        } catch (error) {\r\n          \r\n        }\r\n        \r\n     }\r\n    if(Boolean(searchQuery)){\r\n      return fetchMovies()\r\n    }\r\n    },[searchQuery])\r\n  \r\n     \r\n    const moviesList=movies.map(item=>{\r\n        return(\r\n            <li key={item.id} className={style.link_bam}>\r\n               <Link to={`${item.id}`} className={style.link_bam} state={{from: location}}>\r\n                 \r\n                 <img src={`https://image.tmdb.org/t/p/original/${item.poster_path}`}width=\"400px\" alt={item.overview}></img>\r\n                 <p>{item.original_title}</p>\r\n               </Link>\r\n            </li>\r\n        )\r\n    })\r\n\r\n\r\n  return (\r\n    \r\n      <>\r\n      <div>\r\n      </div>\r\n    <form>\r\n      <label>\r\n       <input type=\"text\" name=\"name\" onChange={handleChange} ></input>\r\n      </label>\r\n      <button className={style.buttonlink}>search</button>\r\n    </form>\r\n    <div>\r\n    <ul className={style.filmList}>\r\n        {moviesList}\r\n    </ul>\r\n    </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default FilmSearch;\r\n","import FilmSearch from \"../../components/FilmSeach/FilmSearchPages\";\r\n\r\n\r\nconst MoviesSearch = () => {\r\n    return(\r\n        <>\r\n        <FilmSearch />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoviesSearch","import axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n  params: {\r\n    api_key:\"4fbe7a50ce1a6bc10e341cdef41a29ce\",\r\n  },\r\n});\r\n\r\nexport async function trendsMovie() {\r\n  const { data } = await instanse.get('/trending/movie/week'\r\n  )\r\n  return data;}\r\n// https://api.themoviedb.org/3/trending/movie/week?api_key=4fbe7a50ce1a6bc10e341cdef41a29ce\r\n\r\n\r\nexport const  getMovie=async(id)=> {\r\n  const { data } = await instanse.get(`/movie/${id}`\r\n  )\r\n  return data;}\r\nexport  const getCasts=async (id)=> {\r\n  const { data } = await instanse.get(`/movie/${id}/credits`\r\n  )\r\n  return data;}\r\nexport  const getReview=async (id)=> {\r\n  const { data } = await instanse.get(`/movie/${id}/reviews`\r\n  )\r\n  return data;}\r\nexport  const getFilmSearch=async (query)=> {\r\n  const { data } = await instanse.get(`/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`\r\n  )\r\n  return data;}\r\n\r\n  // https://api.themoviedb.org/3/search/movie?api_key=dsklfmsdl&language=en-US&query=batm&page=1&include_adult=false"],"names":["useState","setValue","movies","setMovies","useSearchParams","searchQuery","get","location","useLocation","console","log","useEffect","fetchMovies","getFilmSearch","moviesSearchResult","results","Boolean","moviesList","map","item","className","style","to","id","state","from","src","poster_path","width","alt","overview","original_title","type","name","onChange","target","value","instanse","axios","baseURL","params","api_key","trendsMovie","data","getMovie","getCasts","getReview","query"],"sourceRoot":""}