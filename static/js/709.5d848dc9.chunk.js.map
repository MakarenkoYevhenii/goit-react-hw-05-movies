{"version":3,"file":"static/js/709.5d848dc9.chunk.js","mappings":"4PACA,EAA2B,wBAA3B,EAA4D,sB,SC8B5D,EA3BkB,WACd,IAAOA,GAAIC,EAAAA,EAAAA,MAAJD,GACP,GAAuBE,EAAAA,EAAAA,UAAS,IAAhC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAC,8GAEgBC,EAAAA,EAAAA,IAASP,GAFzB,OAEHQ,EAFG,OAGTJ,EAASI,EAAYC,MAHZ,uGAAD,qDASfH,MACF,CAACN,IACJ,IAAMU,EAAYP,EAAMQ,KAAI,SAAAC,GACxB,OACA,gBAAkBC,UAAWC,EAA7B,WACC,uBAAIF,EAAKG,QAAS,gBAAKC,IAAG,8CAAyCJ,EAAKK,cAAgBC,IAAKN,EAAKO,UAAWC,MAAM,YAD3GR,EAAKZ,OAIlB,OAAO,eAAIa,UAAWC,EAAf,SACFJ,M,iMCzBHW,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAQ,sCAIL,SAAeC,IAAtB,+B,aAAO,O,oBAAA,sGACkBL,EAASM,IAAI,wBAD/B,uBACGC,EADH,EACGA,KADH,kBAGEA,GAHF,kEAOA,IAAOC,EAAQ,mCAAC,WAAM7B,GAAN,yFACEqB,EAASM,IAAT,iBAAuB3B,IADzB,uBACb4B,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAD,sDAIRrB,EAAQ,mCAAC,WAAOP,GAAP,yFACEqB,EAASM,IAAT,iBAAuB3B,EAAvB,aADF,uBACb4B,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAD,sDAIRE,EAAS,mCAAC,WAAO9B,GAAP,yFACCqB,EAASM,IAAT,iBAAuB3B,EAAvB,aADD,uBACd4B,EADc,EACdA,KADc,kBAGfA,GAHe,2CAAD,sDAITG,EAAa,mCAAC,WAAOC,GAAP,yFACHX,EAASM,IAAT,8CAAoDK,EAApD,gCADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAD","sources":["webpack://react-homework-template/./src/components/casts/casts.module.css?2173","components/casts/Casts.jsx","shared/services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"casts_castList__oACRo\",\"humans\":\"casts_humans__C4vK1\"};","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getCasts } from \"shared/services/getMovies\";\r\nimport style from \"../casts/casts.module.css\"\r\nconst CastsOfFilm=()=>{\r\n    const {id}=useParams();\r\n    const [casts,setCasts]=useState([]);\r\n    \r\n    useEffect(()=>{\r\n        const fetchCasts=async()=>{\r\n            try {\r\n                const singleMovie= await getCasts(id)\r\n                setCasts(singleMovie.cast)\r\n            } catch (error) {\r\n                \r\n            }\r\n           \r\n         }\r\n         fetchCasts()\r\n     },[id])\r\n    const humansCasts=casts.map(item=>{\r\n        return( \r\n        <li key={item.id} className={style.humans}>\r\n         <p>{item.name}</p><img src={`https://image.tmdb.org/t/p/original/${item.profile_path}`} alt={item.character} width=\"200px\" /></li>\r\n        )\r\n    })\r\n    return(<ul className={style.castList}>\r\n        {humansCasts}\r\n    </ul>)\r\n}\r\n\r\nexport default CastsOfFilm","import axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n  params: {\r\n    api_key:\"4fbe7a50ce1a6bc10e341cdef41a29ce\",\r\n  },\r\n});\r\n\r\nexport async function trendsMovie() {\r\n  const { data } = await instanse.get('/trending/movie/week'\r\n  )\r\n  return data;}\r\n// https://api.themoviedb.org/3/trending/movie/week?api_key=4fbe7a50ce1a6bc10e341cdef41a29ce\r\n\r\n\r\nexport const  getMovie=async(id)=> {\r\n  const { data } = await instanse.get(`/movie/${id}`\r\n  )\r\n  return data;}\r\nexport  const getCasts=async (id)=> {\r\n  const { data } = await instanse.get(`/movie/${id}/credits`\r\n  )\r\n  return data;}\r\nexport  const getReview=async (id)=> {\r\n  const { data } = await instanse.get(`/movie/${id}/reviews`\r\n  )\r\n  return data;}\r\nexport  const getFilmSearch=async (query)=> {\r\n  const { data } = await instanse.get(`/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`\r\n  )\r\n  return data;}\r\n\r\n  // https://api.themoviedb.org/3/search/movie?api_key=dsklfmsdl&language=en-US&query=batm&page=1&include_adult=false"],"names":["id","useParams","useState","casts","setCasts","useEffect","fetchCasts","getCasts","singleMovie","cast","humansCasts","map","item","className","style","name","src","profile_path","alt","character","width","instanse","axios","baseURL","params","api_key","trendsMovie","get","data","getMovie","getReview","getFilmSearch","query"],"sourceRoot":""}