{"version":3,"file":"static/js/229.41dc7c4c.chunk.js","mappings":"2PACA,EAA6B,+BAA7B,EAAuE,6BAAvE,EAA+G,6B,SCiE/G,EA3DmB,WACf,OAAuBA,EAAAA,EAAAA,UAAS,KAAhC,eAAaC,GAAb,WACA,GAAyBD,EAAAA,EAAAA,UAAS,IAAlC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAEMC,GAFN,KAEoBD,EAAaE,IAAI,SACrCC,QAAQC,IAAIH,IAIZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAC,8GAEkBC,EAAAA,EAAAA,IAAcN,GAFhC,OAERO,EAFQ,OAGhBV,EAAUU,EAAmBC,SAHb,uGAAD,qDASnB,GAAGC,QAAQT,GACT,OAAOK,MAEP,CAACL,IAGH,IAAMU,EAAWd,EAAOe,KAAI,SAAAC,GACxB,OACI,eAAkBC,UAAWC,EAA7B,UACG,UAAC,KAAD,CAAMC,GAAE,UAAKH,EAAKI,IAAMH,UAAWC,EAAnC,WAEE,gBAAKG,IAAG,8CAAyCL,EAAKM,aAAcC,MAAM,WAC1E,uBAAIP,EAAKQ,qBAJLR,EAAKI,OAWxB,OAEI,iCACA,oBAEF,6BACE,4BACC,kBAAOK,KAAK,OAAOC,KAAK,OAAOC,SAvCf,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACjB7B,EAAS6B,EAAOC,aAwClB,mBAAQZ,UAAWC,EAAnB,wBAEF,0BACA,eAAID,UAAWC,EAAf,SACKJ,W,iMCzDHgB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAQ,sCAIL,SAAeC,IAAtB,+B,aAAO,O,oBAAA,sGACkBL,EAASzB,IAAI,wBAD/B,uBACG+B,EADH,EACGA,KADH,kBAGEA,GAHF,kEAOA,IAAOC,EAAQ,mCAAC,WAAMjB,GAAN,yFACEU,EAASzB,IAAT,iBAAuBe,IADzB,uBACbgB,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAD,sDAIRE,EAAQ,mCAAC,WAAOlB,GAAP,yFACEU,EAASzB,IAAT,iBAAuBe,EAAvB,aADF,uBACbgB,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAD,sDAIRG,EAAS,mCAAC,WAAOnB,GAAP,yFACCU,EAASzB,IAAT,iBAAuBe,EAAvB,aADD,uBACdgB,EADc,EACdA,KADc,kBAGfA,GAHe,2CAAD,sDAIT1B,EAAa,mCAAC,WAAO8B,GAAP,yFACHV,EAASzB,IAAT,8CAAoDmC,EAApD,gCADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAD","sources":["webpack://react-homework-template/./src/components/filmSeach/filmSearch.module.css?6ef3","components/filmSeach/FilmSearch.jsx","shared/services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonlink\":\"filmSearch_buttonlink__YaUe0\",\"filmList\":\"filmSearch_filmList__o6rwd\",\"link_bam\":\"filmSearch_link_bam__k+mnw\"};","import {  useState,useEffect } from \"react\";\r\nimport { getFilmSearch } from \"shared/services/getMovies\";\r\nimport { Link, useParams,useSearchParams} from 'react-router-dom';\r\n    import style from './filmSearch.module.css'\r\n\r\n  \r\n\r\nconst FilmSearch = () => {\r\n    const [value,setValue]=useState(\" \")\r\n    const [movies,setMovies]=useState([])\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const searchQuery = searchParams.get('name');\r\n    console.log(searchQuery);\r\n    const handleChange=({target})=>{\r\n        setValue(target.value)\r\n    }\r\n    useEffect(()=>{\r\n      const fetchMovies=async()=>{\r\n        try {\r\n          const moviesSearchResult= await getFilmSearch(searchQuery)\r\n        setMovies(moviesSearchResult.results)\r\n        } catch (error) {\r\n          \r\n        }\r\n        \r\n     }\r\n    if(Boolean(searchQuery)){\r\n      return fetchMovies()\r\n    }\r\n    },[searchQuery])\r\n  \r\n     \r\n    const moviesList=movies.map(item=>{\r\n        return(\r\n            <li key={item.id} className={style.link_bam}>\r\n               <Link to={`${item.id}`} className={style.link_bam}>\r\n                 \r\n                 <img src={`https://image.tmdb.org/t/p/original/${item.poster_path}`}width=\"400px\"></img>\r\n                 <p>{item.original_title}</p>\r\n               </Link>\r\n            </li>\r\n        )\r\n    })\r\n\r\n\r\n  return (\r\n    \r\n      <>\r\n      <div>\r\n      </div>\r\n    <form>\r\n      <label>\r\n       <input type=\"text\" name=\"name\" onChange={handleChange} ></input>\r\n      </label>\r\n      <button className={style.buttonlink}>search</button>\r\n    </form>\r\n    <div>\r\n    <ul className={style.filmList}>\r\n        {moviesList}\r\n    </ul>\r\n    </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default FilmSearch;\r\n","import axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n  params: {\r\n    api_key:\"4fbe7a50ce1a6bc10e341cdef41a29ce\",\r\n  },\r\n});\r\n\r\nexport async function trendsMovie() {\r\n  const { data } = await instanse.get('/trending/movie/week'\r\n  )\r\n  return data;}\r\n// https://api.themoviedb.org/3/trending/movie/week?api_key=4fbe7a50ce1a6bc10e341cdef41a29ce\r\n\r\n\r\nexport const  getMovie=async(id)=> {\r\n  const { data } = await instanse.get(`/movie/${id}`\r\n  )\r\n  return data;}\r\nexport  const getCasts=async (id)=> {\r\n  const { data } = await instanse.get(`/movie/${id}/credits`\r\n  )\r\n  return data;}\r\nexport  const getReview=async (id)=> {\r\n  const { data } = await instanse.get(`/movie/${id}/reviews`\r\n  )\r\n  return data;}\r\nexport  const getFilmSearch=async (query)=> {\r\n  const { data } = await instanse.get(`/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`\r\n  )\r\n  return data;}\r\n\r\n  // https://api.themoviedb.org/3/search/movie?api_key=dsklfmsdl&language=en-US&query=batm&page=1&include_adult=false"],"names":["useState","setValue","movies","setMovies","useSearchParams","searchParams","searchQuery","get","console","log","useEffect","fetchMovies","getFilmSearch","moviesSearchResult","results","Boolean","moviesList","map","item","className","style","to","id","src","poster_path","width","original_title","type","name","onChange","target","value","instanse","axios","baseURL","params","api_key","trendsMovie","data","getMovie","getCasts","getReview","query"],"sourceRoot":""}